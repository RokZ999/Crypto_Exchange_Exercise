services:
  postgres:
    image: postgres:17.4-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  api:
      container_name: api
      build: ./backend
      depends_on:
        postgres:
          condition: service_healthy
      ports:
        - "8000:8000"
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PW=${POSTGRES_PW}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_PORT=${POSTGRES_PORT}
      volumes:
        - ./backend:/app
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8000/"]
        interval: 5s
        timeout: 5s
        retries: 5
  tests:
    build: ./tests
    container_name: playwright_tests
    depends_on:
      api:
        condition: service_started
    ipc: host
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PW}
    - POSTGRES_DB=${POSTGRES_DB}
    - POSTGRES_HOST=${POSTGRES_HOST}
    - POSTGRES_PORT=${POSTGRES_PORT}
    - API_URL=${API_URL}
    - CI=${CI}
    - PW_TEST_HTML_REPORT_OPEN='never'
    working_dir: /app
    volumes:
      - ./playwright-report:/app/playwright-report
      - ./test-results:/app/test-results